\begin{Verbatim}[commandchars=\\\{\}]
    \PYG{c+c1}{\PYGZsh{} create a table where we can plug in some string of 1s and 0s}
    \PYG{c+c1}{\PYGZsh{} and get out the corresponding digit.}
    \PYG{n}{decoding\PYGZus{}table} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{n+nb}{tuple}\PYG{p}{(}\PYG{n}{encode}\PYG{p}{(}\PYG{n}{k}\PYG{p}{)):} \PYG{n}{v} \PYG{k}{for} \PYG{p}{(}\PYG{n}{k}\PYG{p}{,} \PYG{n}{v}\PYG{p}{)} \PYG{o+ow}{in} \PYG{n}{CODES}\PYG{o}{.}\PYG{n}{items}\PYG{p}{()\PYGZcb{}}
    \PYG{n}{digits} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{array}\PYG{p}{([}\PYG{n}{decoding\PYGZus{}table}\PYG{p}{[}\PYG{n+nb}{tuple}\PYG{p}{(}\PYG{n}{row}\PYG{p}{)]} \PYG{k}{for} \PYG{n}{row} \PYG{o+ow}{in} \PYG{n}{original\PYGZus{}encoding}\PYG{o}{.}\PYG{n}{T}\PYG{p}{])}
    \PYG{c+c1}{\PYGZsh{} digits == [8, 5, 1, 4]}
    \PYG{c+c1}{\PYGZsh{} and we can convert this to a single decimal number by taking the dot product}
    \PYG{c+c1}{\PYGZsh{} with (1000, 100, 10, 1)}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{digits} \PYG{o}{@} \PYG{p}{(}\PYG{l+m+mi}{10} \PYG{o}{**} \PYG{n}{np}\PYG{o}{.}\PYG{n}{arange}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)))}
\end{Verbatim}
